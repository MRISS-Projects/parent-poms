<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- The section order in all POMs follow the suggestion in this link: 
        http://maven.apache.org/pom.html#Quick_Overview -->

    <!-- THE BASICS -->
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>${packaging}</packaging>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- this should be handled by some pom above in pom hierarchy, 
                at dependencyManagement section. If not, uncomment the line below. -->
            <!-- <version>4.8.1</version> -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <!-- this should be handled by some pom above in pom hierarchy, 
                at dependencyManagement section. If not, uncomment the line below. -->
            <!-- <version>1.7.18</version> -->
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <!-- this should be handled by some pom above in pom hierarchy, 
                at dependencyManagement section. If not, uncomment the line below. -->
            <!-- <version>1.1.6</version> -->
        </dependency>
    </dependencies>
    <!-- <dependencyManagement>...</dependencyManagement> -->
    <!-- <modules>...</modules> -->
    <properties>
        <logo.image>images/logo.jpg</logo.image>
        <jenkins.view>${project.parent.artifactId}</jenkins.view>
    </properties>

    <!-- BUILD SETTINGS -->
    <build>
        <resources>
            <resource>
                <directory>src/site</directory>
                <includes>
                    <include>**/*.apt</include>
                </includes>
                <targetPath>${project.build.directory}/generated-site</targetPath>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/site</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.apt</exclude>
                </excludes>
                <targetPath>${project.build.directory}/generated-site</targetPath>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pdf-plugin</artifactId>
                <configuration>
                    <outputDirectory>${project.build.directory}/site/pdf</outputDirectory>
                    <workingDirectory>${project.build.directory}/site/pdf</workingDirectory>
                    <aggregate>false</aggregate>
                    <includeReports>false</includeReports>
                    <siteDirectory>${project.build.directory}/generated-site</siteDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>pdf</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>pdf</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/site/pdf</outputDirectory>
                            <workingDirectory>${project.build.directory}/site/pdf</workingDirectory>
                            <aggregate>false</aggregate>
                            <includeReports>false</includeReports>
                            <siteDirectory>${project.build.directory}/generated-site</siteDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Uncomment the plugin section below if the created module 
                is turn into a pom module type to have other sub-modules -->
            <!--<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-resources-plugin</artifactId> 
                <executions> <execution> <id>copy-resources</id> <phase>process-resources</phase> 
                <goals> <goal>copy-resources</goal> </goals> <configuration> <outputDirectory>.</outputDirectory> 
                <resources> <resource> <directory>src/site</directory> <includes> <include>**/*.apt</include> 
                </includes> <targetPath>${project.build.directory}/generated-site</targetPath> 
                <filtering>true</filtering> </resource> <resource> <directory>src/site</directory> 
                <includes> <include>**</include> </includes> <excludes> <exclude>**/*.apt</exclude> 
                </excludes> <targetPath>${project.build.directory}/generated-site</targetPath> 
                <filtering>false</filtering> </resource> </resources> </configuration> </execution> 
                </executions> </plugin> -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>svn-add-windows</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${is.svn.so.windows}"
                                unless="is.git">
                                <echo message="is.git = ${is.git}" />
                                <exec executable="svn-add.bat" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>svn-add-linux</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${is.svn.so.linux}"
                                unless="is.git">
                                <path id="my.path.ref">
                                    <fileset dir="."
                                        includes="*.sh" />
                                </path>
                                <pathconvert
                                    refid="my.path.ref"
                                    property="my.converted.path"
                                    pathsep=" " />
                                <echo
                                    message="${my.converted.path}" />
                                <exec executable="chmod">
                                    <arg
                                        line="755 ${my.converted.path}" />
                                </exec>
                                <exec executable="./svn-add.sh" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>git-linux</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${is.git}"
                                unless="is.svn.so.windows">
                                <path id="my.path.ref">
                                    <fileset dir="."
                                        includes="*.sh" />
                                </path>
                                <pathconvert
                                    refid="my.path.ref"
                                    property="my.converted.path"
                                    pathsep=" " />
                                <echo
                                    message="${my.converted.path}" />
                                <exec executable="chmod">
                                    <arg
                                        line="755 ${my.converted.path}" />
                                </exec>
                                <exec executable="git.sh" />
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- requires git to be installed and [GIT_HOME]\bin 
                            in the path -->
                        <id>git-windows</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target if="${is.git}"
                                unless="is.svn.so.linux">
                                <exec executable="sh.exe">
                                    <arg value="--login" />
                                    <arg value="-i" />
                                    <arg value="git.sh" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>
    <!-- <reporting> -->
    <!-- </reporting> -->

    <!-- MORE PROJECT INFORMATION -->
    <name>${artifactId}</name>
    <description>My Description</description>
    <!-- <url>...</url> -->
    <!-- <inceptionYear>...</inceptionYear> -->
    <!-- <licenses>...</licenses> -->
    <!-- <organization>...</organization> -->
    <developers>
        <developer>
            <id>developer_id</id>
            <name>Developer Name</name>
            <email>developer.name@gmail.com</email>
            <organization></organization>
            <organizationUrl></organizationUrl>
            <roles>
                <role>Software Engineer</role>
            </roles>
            <timezone>-3</timezone>
        </developer>
    </developers>
    <!-- <contributors>...</contributors> -->

    <!-- ENVIRONMENT SETTINGS -->
    <!-- <issueManagement>...</issueManagement> -->
    <!-- <ciManagement>...</ciManagement> -->
    <!-- <mailingLists>...</mailingLists> -->
    <!-- <scm>...</scm> -->
    <prerequisites>
        <maven>3.1.1</maven>
    </prerequisites>
    <!-- <repositories>...</repositories> -->
    <!-- <pluginRepositories>...</pluginRepositories> -->
    <!-- <distributionManagement>...</distributionManagement> -->
    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <is.svn.so.windows>true</is.svn.so.windows>
            </properties>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <is.svn.so.linux>true</is.svn.so.linux>
            </properties>
        </profile>
        <profile>
            <id>git</id>
            <activation>
                <property>
                    <name>env.GIT</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <is.git>true</is.git>
            </properties>
        </profile>
    </profiles>
</project>

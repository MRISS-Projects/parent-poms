#!/usr/bin/env groovy
// Copyright 2020 Marcelo Riss
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

def credentialsId = "GitHub"
def repoAddressRoot = "github.com"
def repoAddress = "${repoAddressRoot}/MRISS-Projects/${GIT_PROJECT}.git"
def mavenConfigurationId = "default-maven-settings"
def branchName = getBranchName("${BRANCH_NAME}")
def versionInfo = getVersionInfo()

pipeline {
    agent any
    tools {
        maven 'Maven3'
        jdk 'JDK-11'
    }
    options {
        disableConcurrentBuilds()
    }
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out main code...'
                checkout changelog: false, poll: false, scm: [
                    $class: 'GitSCM', 
                    branches: [[name: "${branchName}"]],
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [[$class: 'LocalBranch', localBranch: "${branchName}"], [$class: 'WipeWorkspace']],
                    submoduleCfg: [], 
                    userRemoteConfigs: [[credentialsId: "${credentialsId}", url: "https://${repoAddress}"]]
                ]
            }
        }
        stage("Stage snapshot build") {
            steps{
                echo 'Staging RC deployment...'
                configFileProvider(
                    [configFile(fileId: "${mavenConfigurationId}", variable: 'MAVEN_SETTINGS')]) {
                    sh "mvn -s $MAVEN_SETTINGS -U -B -Dappengine.project.version=${versionInfo}-rc${BUILD_NUMBER} -Djenkins.build.number=RC${BUILD_NUMBER} -Drelease.type=rcs -P deployment clean deploy"
                    sh "mvn -s $MAVEN_SETTINGS -U -B -Djenkins.build.number=RC${BUILD_NUMBER} -Drelease.type=rcs -P deployment site-deploy"
                }
            }
        }
    }
    post {
        success {
            echo 'Success!'
        }
        failure {
            echo 'Failure!'
        }
    }
}

def getVersionInfo() {
    def pom = readMavenPom file: 'pom.xml'
    def (major, minor, fix) = pom.version.replace("-SNAPSHOT", "").tokenize(".")
    return major + "-" + minor + "-" + fix
}

def getBranchName(branchName) {
    def slashIndex = branchName.indexOf("/")
    return branchName.substring(slashIndex+1)
}
